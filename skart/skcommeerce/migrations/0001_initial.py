# Generated by Django 3.2.9 on 2021-11-07 11:56

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField()),
                ('mobile_number', models.IntegerField(unique=True, validators=[django.core.validators.MaxValueValidator(9999999999), django.core.validators.MinValueValidator(1000000000)])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_tag', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('Clothes', (('MW', "Men's wear"), ('WW', "Women's wear"), ('CD', "Kid's wear"))), ('Shoes', (('RS', 'Running Shoes'), ('FS', 'Formal Shoes'), ('SS', 'sneakers'), ('BS', 'Boots'), ('OS', 'Others'))), ('Electronics', (('LP', 'Laptop'), ('M', 'Mobile'), ('CM', 'Computor Parts'), ('O', 'Other'))), ('Stationery', (('PS', 'Pencils'), ('PN', 'Pens'), ('CS', 'Copies'), ('OT', 'Other Stationeries'))), ('Electrics', (('FE', 'Fans'), ('CE', 'Cables'), ('TE', ' Thin wires'), ('LE', 'LED'), ('TV', 'Television'), ('BE', 'Batteries'), ('OE', 'Other Electric materials'))), ('books', (('Drama', 'Drama'), ('Self help books', 'Self help books'), ('Story books', 'Story Books'), ('Novels', 'Novels'), ('School books', 'School books'), ('Higher Education Books', 'Higher Education Books'), ('Other Books', 'Other Books'))), ('Other', 'Other')], max_length=255)),
                ('price', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('stock', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('description', models.TextField(blank=True)),
                ('additional_information', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='uploads')),
                ('status', models.BooleanField(default=True)),
                ('date_created', models.DateField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_category', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seller_name', models.CharField(max_length=255)),
                ('store_address', models.TextField()),
                ('total_income', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('mobile_number', models.IntegerField(unique=True, validators=[django.core.validators.MaxValueValidator(9999999999), django.core.validators.MinValueValidator(1000000000)])),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('seller', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('selling_product_category', models.ManyToManyField(to='skcommeerce.ProductCategory')),
            ],
        ),
        migrations.CreateModel(
            name='ProductOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveSmallIntegerField(default=1)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ordered_products', to='skcommeerce.product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='seller',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Product_seller', to='skcommeerce.seller'),
        ),
        migrations.CreateModel(
            name='PlaceOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_status', models.CharField(choices=[('Initialized', 'initialized'), ('Dispatched', 'Dispatched'), ('On Route', 'On Route'), ('Out for delivery', 'Out for delivery'), ('Delivered', 'Delivered')], max_length=255)),
                ('total_price', models.IntegerField(default=0)),
                ('receiver_name', models.CharField(max_length=255)),
                ('receiver_mobile_number', models.IntegerField(validators=[django.core.validators.MaxValueValidator(9999999999), django.core.validators.MinValueValidator(1000000000)])),
                ('place', models.CharField(max_length=400)),
                ('district', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=255)),
                ('country', models.CharField(max_length=255)),
                ('ordered_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_order', to='skcommeerce.customer')),
                ('products', models.ManyToManyField(blank=True, to='skcommeerce.ProductOrder')),
            ],
            options={
                'ordering': ['-ordered_at'],
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_price', models.IntegerField(default=0)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='customer', to='skcommeerce.customer')),
                ('products', models.ManyToManyField(blank=True, to='skcommeerce.ProductOrder')),
            ],
            options={
                'ordering': ['-updated_on'],
            },
        ),
        migrations.CreateModel(
            name='CancelledOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cancelled_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cancelled_customer', to='skcommeerce.customer')),
                ('products', models.ManyToManyField(blank=True, to='skcommeerce.ProductOrder')),
            ],
            options={
                'ordering': ['-cancelled_at'],
            },
        ),
    ]
